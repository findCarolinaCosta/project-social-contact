{"version":3,"sources":["components/Profile.js","components/Connections.js","App.js","index.js"],"names":["Profile","state","api","userName","loading","showProfile","hideBtn","render","changeDataJson","bind","handleChange","handleClick","getInfosFromLocalStorage","changeProfile","getLogout","_prevProps","prevState","this","length","localStorage","setItem","alert","target","name","value","setState","a","myUser","url","fetch","response","json","dataJson","console","log","confirmIfLogin","props","getItem","JSON","parse","removeItem","window","location","reload","className","type","onClick","email","bio","login","id","href","html_url","src","avatar_url","alt","stringify","loginUser","onChange","placeholder","conditionCardInfo","card","teste","btnHidden","returnLogoutBtn","React","Component","Connections","user","list","counter","background","removeContact","contactAdder","changeToBlue","changeToCoral","getListFromLocalStorage","_nextProps","isLogin","isUserAbsent","some","contact","apiResponse","profileObject","Error","loginToRemove","updatedList","filter","map","width","data-login","contactList","App","action","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2489ec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      api: '',\n      userName: '',\n      loading: true,\n      showProfile: true,\n      hideBtn: true,\n      render: true,\n    };\n\n    this.changeDataJson = this.changeDataJson.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getInfosFromLocalStorage = this.getInfosFromLocalStorage.bind(this);\n    this.changeProfile = this.changeProfile.bind(this);\n    this.getLogout = this.getLogout.bind(this);\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    const { userName } = this.state;\n    if (prevState.userName.length < userName.length) {\n      localStorage.setItem('@User', userName);\n    }\n  }\n\n  componentWillUnmount() {\n    /* eslint-disable no-alert */\n    alert('VocÃª ocultou seu perfil');\n    /* eslint-disable no-alert */\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleClick() {\n    const { userName } = this.state;\n    const myUser = userName; // Preencha myUser com o seu user do GitHub.\n    try {\n      const url = `https://api.github.com/users/${myUser}`;\n      const response = await fetch(url);\n      const dataJson = await response.json();\n      this.changeDataJson(dataJson);\n      this.setState({ loading: false, hideBtn: false, render: true });\n    } catch (error) {\n      console.log(error);\n    }\n    const { confirmIfLogin } = this.props;\n    confirmIfLogin(true);\n  }\n\n  getInfosFromLocalStorage() {\n    const { userName } = this.state;\n    if (userName.length === 0 && localStorage.getItem('@User') !== null) {\n      this.setState({\n        userName: localStorage.getItem('@User'),\n        api: JSON.parse(localStorage.getItem('@User%pi')),\n        loading: false,\n        hideBtn: false,\n      });\n    }\n  }\n\n  getLogout() {\n    localStorage.removeItem('@User');\n    localStorage.removeItem('@User%pi');\n    this.setState({\n      render: false,\n      hideBtn: true,\n      api: '',\n      userName: '',\n    });\n    window.location.reload();\n  }\n\n  changeProfile() {\n    const { showProfile } = this.state;\n    this.setState({ showProfile: !showProfile });\n  }\n\n  btnHidden() {\n    return (\n      <div className=\"central d-flex justify-content-center\">\n        <button\n          className=\"btn btn-dark align-self-center\"\n          type=\"button\"\n          onClick={ this.changeProfile }\n        >\n          Mostrar / Ocultar Perfil\n        </button>\n      </div>\n    );\n  }\n\n  card() {\n    const { api: { name, email, bio, location, login } = '', api } = this.state;\n    return (\n      <div\n        className=\"d-flex h-100 flex-column\n        justify-content-center align-items-center\"\n        id=\"divCardUser\"\n      >\n        <h1>{ name }</h1>\n        <a href={ api.html_url }>{ login }</a>\n        <span>{ email }</span>\n        <img className=\"myPicture\" src={ api.avatar_url } alt=\"Avatar\" />\n        <p>{ bio }</p>\n        <p>{ location }</p>\n      </div>\n    );\n  }\n\n  returnLogoutBtn() {\n    return (\n      <div className=\"central d-flex justify-content-center\">\n        <button\n          className=\"btn btn-dark align-self-center\"\n          type=\"button\"\n          onClick={ this.getLogout }\n        >\n          Logout\n        </button>\n      </div>\n    );\n  }\n\n  changeDataJson(dataJson) {\n    this.setState({ api: dataJson });\n    localStorage.setItem('@User%pi', JSON.stringify(dataJson));\n  }\n\n  render() {\n    const { api, loading, showProfile, hideBtn, render } = this.state;\n    this.getInfosFromLocalStorage();\n    const loginUser = (\n      <div className=\"form\">\n        <form className=\"input-group justify-content-center\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"userName\"\n            onChange={ this.handleChange }\n            placeholder=\"Digite seu nome usuÃ¡rio\"\n          />\n          <button\n            className=\"btn btn-outline-dark\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n    const conditionCardInfo = loading ? <p>Loading...</p> : this.card();\n    const teste = render ? (\n      <div>\n        { showProfile ? conditionCardInfo : null }\n      </div>\n    ) : null;\n    return (\n      <section>\n        <div\n          className=\"git d-flex flex-column\n          justify-content-center align-items-center\"\n          id=\"returnDiv\"\n        >\n          { teste }\n          { api ? null : loginUser }\n        </div>\n        <div>\n          { hideBtn ? null : this.btnHidden() }\n          { hideBtn ? null : this.returnLogoutBtn() }\n        </div>\n      </section>\n    );\n  }\n}\n\nProfile.propTypes = {\n  confirmIfLogin: PropTypes.func.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Connections extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: '',\n      list: [],\n      counter: 0,\n      background: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.removeContact = this.removeContact.bind(this);\n    this.contactAdder = this.contactAdder.bind(this);\n    this.changeToBlue = this.changeToBlue.bind(this);\n    this.changeToCoral = this.changeToCoral.bind(this);\n    this.getListFromLocalStorage = this.getListFromLocalStorage.bind(this);\n  }\n\n  shouldComponentUpdate(_nextProps, { list }) {\n    const maxContactsNumber = 3;\n    return list.length <= maxContactsNumber;\n    // A quantidade de contatos nÃ£o pode ser maior que 3, portanto se a lista Ã© maior que 3, ele deverÃ¡ retornar false e impedir a atualizaÃ§Ã£o.\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    const { list } = this.state;\n    if (list.length > 0) {\n      localStorage.setItem('List', JSON.stringify(list));\n    }\n    if (prevState.list.length < list.length) {\n      this.changeToBlue(); // Ao adicionar um contato, a div ficarÃ¡ azul.\n    } else if (prevState.list.length > list.length) {\n      this.changeToCoral(); // Ao deletar um contato, a div ficarÃ¡ coral.\n    }\n  }\n\n  handleChange({ target: { value } }) {\n    this.setState({\n      user: value,\n    });\n  }\n\n  async handleClick() {\n    const { user, list, counter } = this.state;\n    const { isLogin } = this.props;\n    if (isLogin) {\n      const url = `https://api.github.com/users/${user}`;\n      const isUserAbsent = !list.some((contact) => contact.login === user);\n      try {\n        const apiResponse = await fetch(url);\n        const profileObject = await apiResponse.json();\n        if (profileObject.login && isUserAbsent) {\n          this.setState({\n            list: [...list, profileObject],\n            counter: counter + 1,\n          });\n        } else {\n          throw new Error('UsuÃ¡rio nÃ£o encontrado');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      /* eslint-disable no-alert */\n      alert('Digite um nome de usuÃ¡rio para poder adicionar contatos');\n    /* eslint-disable no-alert */\n    }\n  }\n\n  getListFromLocalStorage() {\n    const { list } = this.state;\n    if (list.length === 0 && JSON.parse(localStorage.getItem('List') !== null)) {\n      this.setState({\n        list: JSON.parse(localStorage.getItem('List')),\n        counter: list.length,\n      });\n    }\n  }\n\n  changeToBlue() {\n    this.setState({ background: 'connections-blue' });\n  }\n\n  changeToCoral() {\n    this.setState({ background: 'connections-coral' });\n  }\n\n  removeContact(loginToRemove) {\n    const { list, counter } = this.state;\n    const updatedList = list.filter(({ login }) => login !== loginToRemove);\n    this.setState({\n      list: updatedList,\n      counter: counter === 0 ? 0 : counter - 1,\n    });\n    if (counter <= 1) {\n      localStorage.removeItem('List');\n    }\n  }\n\n  contactAdder(counter) {\n    return (\n      <div className=\"counter\">\n        <div>\n          <h5>Quantidade de contatos:</h5>\n          <span>{ counter }</span>\n        </div>\n        <div className=\"form\">\n          <form className=\"input-group justify-content-center\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              placeholder=\"Adicione seu contato famoso\"\n            />\n            <button\n              className=\"btn btn-outline-dark\"\n              type=\"button\"\n              onClick={ this.handleClick }\n            >\n              Adicionar\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  contactList(list) {\n    return (\n      <div className=\"card-list d-flex flex-row justify-content-around\">\n        { list.map((api) => (\n          <div className=\"card d-flex align-items-center\" key={ api.name }>\n            <h5>{ api.name }</h5>\n            <img className=\"c-img\" src={ api.avatar_url } alt=\"Avatar\" width=\"50%\" />\n            <button\n              className=\"c-button btn btn-danger w-25 align-self-center\"\n              data-login={ api.login }\n              type=\"button\"\n              onClick={ () => this.removeContact(api.login) }\n            >\n              X\n            </button>\n          </div>))}\n      </div>\n    );\n  }\n\n  render() {\n    const { list, counter, background } = this.state;\n    this.getListFromLocalStorage();\n\n    return (\n      <div className={ `git-connections ${background}` }>\n        { this.contactAdder(counter) }\n        { this.contactList(list) }\n      </div>\n    );\n  }\n}\n\nConnections.propTypes = {\n  isLogin: PropTypes.func.isRequired,\n};\n\nexport default Connections;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Profile from './components/Profile';\nimport Connections from './components/Connections';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLogin: false,\n    };\n  }\n\n  render() {\n    const confirmIfLogin = (action) => {\n      const { isLogin } = this.state;\n      if (action) {\n        return this.setState({\n          isLogin: action,\n        });\n      }\n      console.log(isLogin);\n    };\n\n    return (\n      <div className=\"gitNetwork d-flex flex-column justify-content-center\">\n        <Profile\n          { ...this }\n          { ...this.state }\n          { ...this.props }\n          confirmIfLogin={ confirmIfLogin }\n        />\n        <Connections\n          { ...this }\n          { ...this.state }\n          confirmIfLogin={ confirmIfLogin }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}